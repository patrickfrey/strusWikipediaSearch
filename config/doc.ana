# 
# Document analyzer program for inserting into storage
# Token types:
#	-T sentence delimiter
#	-P punctuation without sentence delimiter
#	-C cardinal number
#	-X existential there
#	-A adjective/adverb
#	-V verb, past tense or gerund or present participle or past participle or singular present
#	-M modal, pre determiner
#	-N noun singular or plural, foreign word
#	-E entity (proper noun, singular or plural)
#	-U URI
#	-R entity, personal or possesive pronoun
#	-W determiner
#
[ForwardIndex]
	url = lc regex("^[a-z]{3,6}[:][/][/]([^ ?]*)") //weblink@id;
	url = lc regex("^([a-z]{1,32}[.][^ ?]*)") //weblink@id;
	pageref = orig content //pagelink@id;
	bibref = orig content //bibref();
	time = orig content //time();
	categoryid = orig content //category@cid;
	headingid = orig content //title@id;
	headingid = orig content //heading@id;

	entityref = orig content //N@id;
	entityref = orig content //E@id;
	entityref = orig content //R@id;

	punct = orig content //T();
	comma = orig content //P();
	cardinal = orig content //C();
	exist = orig content //X();
	adjv = orig content //A();
	verb = orig content //V();
	modal = orig content //M();
	noun = orig content //N();
	entity = orig content //E();
	url = orig content //U();
	pron = orig content //R();
	wdet = orig content //W();

	orig = orig content //T();
	orig = orig content //P();
	orig = orig content //C();
	orig = orig content //X();
	orig = orig content //A();
	orig = orig content //V();
	orig = orig content //M();
	orig = orig content //N();
	orig = orig content //E();
	orig = orig content //U();
	orig = orig content //R();
	orig = orig content //W();
	orig = orig content //heading();
	orig = orig content //tabtitle();
	orig = orig content //head();
	orig = orig content //cell();
	orig = orig content //citation();
	orig = orig content //ref();
	orig = orig content //list();
	orig = orig content //text();
	orig = orig content //attr();
	orig = orig content //pagelink();
	orig = orig content //weblink();
	orig = orig content //entity();
	orig = orig content //quot();
	orig = orig word //math();
	orig = orig content //char();
	orig = orig content //code();
	orig = orig content //bibref();
	orig = orig content //time();

[SearchIndex]
	word = lc:entityid regex("^[a-z]{3,6}[:][/][/]([^ ?]*)") //weblink@id;
	word = lc:entityid regex("^([a-z]{1,32}[.][^ ?]*)") //weblink@id;
	word = lc:entityid content //bibref();
	categoryid = lc content //category@cid;
	headid = lc content //title@id;
	headid = lc content //heading@id;

	title = lc word /doc/title();

	entity = lc:entityid content {position=succ} //N@id;
	entity = lc:entityid content {position=succ} //E@id;
	entity = lc:entityid content {position=succ} //R@id;
	entity = lc:entityid content //E();

	word = empty content //T;
	word = empty content //P;
	word = lc word //C();
	word = lc word //X();
	word = lc word //A();
	word = lc word //V();
	word = lc word //M();
	word = lc:entityid content {position=succ} //N();
	word = lc:entityid content {position=succ} //E();
	word = lc word //N();
	word = lc word //E();
	word = lc word //U();
	word = lc word //R();
	word = lc word //W();
	word = lc word //heading();
	word = lc word //tabtitle();
	word = lc word //head();
	word = lc word //cell();
	word = lc word //citation();
	word = lc word //ref();
	word = lc word //list();
	word = lc word //text();
	word = lc word //attr();
	word = lc word //pagelink();
	word = lc word //weblink();
	word = lc word //entity();
	word = lc word //quot();
	word = lc word //math();
	word = lc word //char();
	word = lc word //code();

[Attribute]
	title = orig content /doc/title();
	docid = orig content /doc/docid();
[Aggregator]
	doclen = count( word);
[Metadata]

