# 
# Document analyzer program for dumping content as word2vec input
#
punct = empty content //P;
eos = empty content //T;
eod = empty content /doc~;

word = prefix("H#"):entityid content //heading@id;
word = prefix("H#"):entityid content //title@id;
word = prefix("H#"):entityid content //br@id;
word = prefix("E#"):lc:entityid content //entity();
word = prefix("E#"):lc:entityid content //pagelink();
word = prefix("E#"):lc:entityid content //pagelink();

word = prefix("C#"):lc:entityid word //C();
word = prefix("X#"):lc:entityid word //X();
word = prefix("A#"):lc:entityid word //A();
word = prefix("M#"):lc:entityid word //M();
word = prefix("N#"):lc:entityid:decode_url:decode_url content //N();
word = prefix("E#"):lc:entityid:decode_url:decode_url content //E();
word = prefix("R#"):lc:entityid word //R();
word = prefix("V#"):lc:entityid word //V();
word = prefix("W#"):lc:entityid word //W();
word = prefix("T#"):lc:entityid:decode_url:decode_url word //text();
word = prefix("T#"):lc:entityid:decode_url:decode_url word //attr();
word = prefix("T#"):lc:entityid:decode_url:decode_url word //quot();
word = prefix("T#"):lc:entityid:decode_url:decode_url word //char();

refid = prefix("E#"):lc:entityid:decode_url:decode_url content {position=succ} //N@id;
refid = prefix("E#"):lc:entityid:decode_url:decode_url content {position=succ} //E@id;
refid = prefix("E#"):lc:entityid:decode_url:decode_url content {position=succ} //R@id;


